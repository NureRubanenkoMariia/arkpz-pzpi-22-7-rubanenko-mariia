Міністерство освіти і науки України
Харківський національний університет радіоелектроніки


Кафедра програмної інженерії



Звіт
з практичної роботи №2
з дисципліни «Аналіз та рефакторинг коду»
з теми: «Методи рефакторингу коду програмного забезпечення»





Виконав 								Перевірив
ст. гр. ПЗПІ-22-7 							доц. Сокорчук І. П.
Рубаненко М. С.








2024 рік
1 ОСНОВНІ РЕКОМЕНДАЦІЇ ЗАСТОСУВАННЯ МЕТОДІВ РЕФАКТОРИНГУ КОДУ ПРОГРАМНОГО ЗАБЕЗПЕЧЕННЯ

1.1 Мета роботи 

Ознайомитися з різними методами рефакторингу програмного коду, дослідити їхні переваги та недоліки, а також продемонструвати їх використання на реальних прикладах для покращення якості, продуктивності та підтримуваності програмного забезпечення.

1.2	Хід роботи 

1.	Обрано три методи рефакторингу з книги Мартіна Фаулера «Refactoring: Improving the Design of Existing Code», а саме  Remove Control Flag, Replace Array with Object, Remove Assignments to Parameters.
2.	Підготовлено приклади коду для демонстрації застосування обраних методів рефакторингу.
3.	Створено презентацію (див. дод. А), у якій висвітлено такі ключові аспекти:
	метод рефакторингу Remove Control Flag, видалення контрольних прапорів для спрощення коду;
	метод рефакторингу  Replace Array with Object, заміна масиву на об’єкт для чіткішої структури даних;
	метод рефакторингу  Remove Assignments to Parameter, усунення призначень для параметрів з метою збереження їхньої стабільності;
	інструменти для рефакторингу.

4. Оформлено звіт до практичного заняття.
1.3 Висновок

У ході виконання практичної роботи були детально розглянуті та застосовані різні методи рефакторингу, що сприяють покращенню структури та якості коду. Метод Remove Control Flag допоміг спростити логіку шляхом видалення контрольних прапорів, що зменшило вкладеність умовних операторів та зробило код більш зрозумілим і легшим для подальшого редагування. Метод Replace Array with Object забезпечив чіткішу структуру даних, замінюючи масиви на об’єкти. Це дозволило зробити код більш самодокументованим і зменшило ризик помилок, пов’язаних з неправильним доступом до індексів у масиві. Метод Remove Assignments to Parameter зберіг стабільність переданих параметрів, усуваючи їхні зміни в процесі виконання методу. Це підвищило передбачуваність коду та полегшило його підтримку. Загалом рефакторинг сприяє підтримці високої якості коду, забезпечуючи його читабельність, розширюваність та надійність. Регулярне застосування рефакторингу допомагає виявляти та усувати технічний борг, що накопичується з часом. Застосовувати рефакторинг необхідно систематично, особливо при внесенні змін, додаванні нових функцій чи виправленні багів, щоб підтримувати стабільність і якість програмного забезпечення.

Посилання на файл з кодом в GitHub репозиторії:
https://github.com/NureRubanenkoMariia/arkpz-pzpi-22-7-rubanenko-mariia
Посилання на YouTube відео з презентацією:
https://youtu.be/UhQs2lg0hR0
ДОДАТОК А
Слайди презентації

 
Рисунок А.1 –Титульний слайд презентації

Рисунок А.2 – Слайд зі змістом презентації
 
Рисунок А.3 – Слайд з описом мети рефакторингу
 
Рисунок А.4 –Слайд з описом обраних методів рефакторингу

Рисунок А.5 – Слайд з описом методу рефакторингу Remove Control Flag

Рисунок А.6 – Слайд з прикладом коду до і після застосування методу Remove Control Flag

Рисунок А.7 – Слайд з описом методу рефакторингу Replace Array with Object

Рисунок А.8 – Слайд з прикладом коду до і після застосування методу Replace Array with Object  Рисунок А.9 – Слайд з описом методу рефакторингу Remove Assignments to Parameter  Рисунок А.10 – Слайд з прикладом коду до і після застосування методу Remove Assignments to Parameter  Рисунок А.11 – Слайд з переліком інструментів для рефакторингу
 
Рисунок А.12 – Слайд з висновками

Рисунок А.13 –Слайд з переліком використаних джерел
