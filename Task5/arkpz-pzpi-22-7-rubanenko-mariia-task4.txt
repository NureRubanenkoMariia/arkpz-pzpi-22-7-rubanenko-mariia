Міністерство освіти і науки України
Харківський національний університет радіоелектроніки


Кафедра програмної інженерії



Звіт
з лабораторної роботи №5
з дисципліни «Аналіз та рефакторинг коду»
з теми: «Розгортання програмної системи та демонстрація її роботи»





Виконав 								Перевірив
ст. гр. ПЗПІ-22-7 							доц. Сокорчук І. П.
Рубаненко М. С.




2024 рік
1 РОЗГОРТАННЯ ПРОГРАМНОЇ СИСТЕМИ ТА ДЕМОНСТРАЦІЯ ЇЇ РОБОТИ
1.1	Мета роботи


Вивчити та опанувати процес розгортання програмної системи, включаючи налаштування серверного середовища, створення та запуск бази даних, а також впровадження емулятора IoT для взаємодії з бекендом. 


1.2	Вимоги до середовища для розгортання програмної системи


Для успішного розгортання програмної системи необхідно забезпечити відповідність кільком технічним вимогам. Основою для роботи системи є сучасна операційна система, така як Windows, macOS або Linux, яка підтримує інтерпретатор Python. Для коректної роботи потрібна версія Python не нижче 3.9, яку можна завантажити з офіційного сайту.
Крім того, необхідно мати інструмент для створення та управління віртуальними середовищами Python (наприклад, модуль venv), що дозволяє ізолювати залежності проєкту. Щоб працювати з базою даних, використовується реляційна СУБД Microsoft SQL Server, яка має бути попередньо встановлена разом із драйвером ODBC (версія 17 або новіша). Для зручного управління базою даних рекомендовано використовувати SQL Server Management Studio (SSMS).
Пакети Python, такі як Flask, SQLAlchemy, pyodbc та інші залежності, вказані в файлі requirements.txt, повинні бути встановлені через менеджер пакетів pip. Крім цього, система вимагає активного мережевого з’єднання для доступу до зовнішніх ресурсів і демонстрації API.
Для забезпечення стабільної роботи системи пристрій, на якому вона розгортається, повинен мати щонайменше 2 ГБ оперативної пам'яті, процесор із тактовою частотою не менше 2 ГГц та щонайменше 10 ГБ вільного дискового простору для зберігання файлів проєкту, бібліотек Python і бази даних. Це забезпечить швидке виконання запитів і належну продуктивність системи.
Дотримання цих вимог гарантує можливість розгортання програмної системи та її коректне функціонування на обраному обладнанні.


1.3	Розгортання серверної частини системи


Розгортання програмної системи передбачає кілька послідовних кроків, які забезпечують правильну підготовку серверної частини та емулятора IoT. 
На початку слід завантажити архів із програмним кодом проєкту та розпакувати його у відповідну директорію. Після цього необхідно відкрити термінал або командний рядок, перейти до кореневої директорії проєкту за допомогою команди cd.
	Для ізоляції залежностей рекомендується створити віртуальне середовище за допомогою команди python -m venv venv. Ця команда створює директорію venv, що містить локальну копію Python і необхідні бібліотеки. Віртуальне середовище активується на Windows командою venv\Scripts\activate, на macOS/Linux командою source venv/bin/activate. 
	Після активації середовища необхідно встановити всі залежності, вказані у файлі requirements.txt командою pip install -r requirements.txt. 
	Для роботи системи створюється файл .env у кореневій директорії проєкту, який має містити такі параметри:


1   SECRET_KEY="згенероване_значення"
2   DATABASE_URL="посилання_на_базу"
3   JWT_SECRET_KEY="згенероване_значення"
4   DATABASE_NAME = "ім’я_бази"
5   BACKUP_DIR = "шлях_до_папки_де_зберігатимуться_бекапи"
6   FLASK_APP="run.py"

Секретні ключі SECRET_KEY і JWT_SECRET_KEY можна згенерувати у Python-консолі за допомогою команди python -c "import secrets; print(secrets.token_hex(32))". Параметр DATABASE_URL налаштовується відповідно до конфігурації сервера Microsoft SQL Server.
Параметр BACKUP_DIR потрібний для налаштування резервного копіювання бази даних. Вказується шлях до папки з бекапами, назва файлу бекапу буде складатися з імені бази, слова бекап та часової мітки.
Для запуску серверу Flask виконується команда flask run Після запуску сервер стає доступним за адресою http://127.0.0.1:5000. 

	
1.4	Розгортання IoT-емулятора


Архів із емулятором IoT розпаковується в окрему директорію. Для налаштування необхідно перейти до цієї директорії у терміналі та створити віртуальне середовище, активувати його та встановити залежності, як це робилося раніше. Емулятор IoT запускається командою python main.py.


1.5	Конфігурація та створення бази даних


Розгортання скрипта бази даних у Microsoft SQL Server передбачає виконання декількох етапів. Перш за все, відкривається Microsoft SQL Server Management Studio (SSMS) та підключається до потрібного інстансу сервера, вказуючи дані для аутентифікації.
Далі завантажується скрипт бази даних. Це виконується через меню File, де потрібно обрати Open → File і вказує шлях до скрипта. У скрипті потрібно змінити FILENAME рис 1.1. 

Рисунок 1.1 –Налаштування FILENAME у скрипті бази даних Blood bank

Для запуску скрипта натискається кнопка Execute або використовується клавіша F5. Після завершення виконання потрібно перевірити успішність операції, переглядаючи повідомлення в нижньому вікні. Потім здійснюється візуальна перевірка створених таблиць через панель Object Explorer. 
Для забезпечення надійності та ефективності роботи зі скриптами бази даних потрібно дотримуватися таких правил, а саме перед виконанням будь-якого скрипта, який вносить зміни у вже існуючу базу даних, необхідно створити резервну копію, це дозволить уникнути втрати даних у разі помилок під час виконання. Слід перевірити, що версія SQL Server відповідає тій, для якої створено скрипт. Невідповідність може призвести до помилок або некоректної роботи бази даних.
1.6	Висновки

У процесі виконання роботи було здійснено успішне розгортання програмної системи, що включає три основні компоненти: серверний бекенд, базу даних та емулятор IoT. Ретельно виконані налаштування дозволили створити повноцінну інфраструктуру, придатну для демонстрації та використання системи. Робота дала змогу закріпити знання про використання інструментів для створення та управління базами даних, таких як SQL Server Management Studio. Ознайомитися з принципами створення віртуального середовища та встановлення залежностей у Python. Практично реалізувати налаштування конфігураційних файлів та їх взаємодію із сервером додатку. Та забезпечити ефективну комунікацію між IoT-клієнтом та сервером.


Посилання на відео:
https://youtu.be/Yu0zbkJV3IE

Посилання на GitHub
https://github.com/NureRubanenkoMariia/arkpz-pzpi-22-7-rubanenko-mariia/tree/main/Task5
